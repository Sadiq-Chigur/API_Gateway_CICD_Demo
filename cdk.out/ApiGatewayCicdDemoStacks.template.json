{
 "Resources": {
  "GlobalLoyaltyApidev52BC2517": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Body": {
     "openapi": "3.0.1",
     "info": {
      "title": "Global-Loyalty-v2-Dev",
      "description": "Loyalty APIs V2",
      "version": "2025-02-17T14:18:33Z"
     },
     "servers": [
      {
       "url": "https://loyalty-gb-dev.skechers.com/{basePath}",
       "variables": {
        "basePath": {
         "default": "loyalty/v2"
        }
       }
      }
     ],
     "paths": {
      "/transaction/program/tier_level": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/fetchTierSystemRequest"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/transactions/program/tier_level",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/profile": {
       "get": {
        "parameters": [
         {
          "name": "userId",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/points/profile",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale",
          "integration.request.header.userId": "method.request.header.userId"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/application-status": {
       "get": {
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/application-status",
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transactions": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "202": {
          "description": "202 response",
          "content": {}
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/transactions",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^202.*": {
           "statusCode": "202"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transactions/program/tier_level": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/fetchTierSystemRequest"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/transactions/program/tier_level",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/reinstate/offer": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/reinstate/offer",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/spend": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "202": {
          "description": "202 response",
          "content": {}
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/spend",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^202.*": {
           "statusCode": "202"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/offers/fetch_offers": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/fetchOfferRequest"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/offers/fetch_offers",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transactions/purchase-history": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "externalId",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/transactions/purchase-history",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.externalId": "method.request.header.externalId",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/users/{userId}": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "profile",
          "in": "query",
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.usersUrl}/users/{userId}",
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
           }
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.querystring.profile": "method.request.querystring.profile",
          "integration.request.header.locale": "method.request.header.locale",
          "integration.request.path.userId": "method.request.path.userId"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       },
       "put": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/vnd.loyalty.user-v1+json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "202": {
          "description": "202 response",
          "content": {}
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "PUT",
         "uri": "http://${stageVariables.usersUrl}/users/{userId}",
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
           }
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^202.*": {
           "statusCode": "202"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale",
          "integration.request.path.userId": "method.request.path.userId"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       },
       "delete": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "DELETE",
         "uri": "http://${stageVariables.usersUrl}/users/{userId}",
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
           }
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale",
          "integration.request.path.userId": "method.request.path.userId"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/users/list": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "email",
          "in": "query",
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "phone",
          "in": "query",
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {}
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.usersUrl}/users/list",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.querystring.email": "method.request.querystring.email",
          "integration.request.querystring.phone": "method.request.querystring.phone",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/audit_logs": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "externalId",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "summary",
          "in": "query",
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/points/audit_logs",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.querystring.summary": "method.request.querystring.summary",
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.externalId": "method.request.header.externalId",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/redeem": {
       "post": {
        "parameters": [
         {
          "name": "userId",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/redeem",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale",
          "integration.request.header.userId": "method.request.header.userId"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/redeem/offer": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/redeem/offer",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/offers/user_rewards": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/fetchUserRewardModel"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/offers/user_rewards",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/{customer_no}": {
       "get": {
        "parameters": [
         {
          "name": "customer_no",
          "in": "path",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/points/{customer_no}",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.Authorization": "method.request.header.Authorization",
          "integration.request.path.customer_no": "method.request.path.customer_no"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/users": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "userIds",
          "in": "query",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "profile",
          "in": "query",
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.usersUrl}/users",
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
           }
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.querystring.userIds": "method.request.multivaluequerystring.userIds",
          "integration.request.querystring.profile": "method.request.querystring.profile",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       },
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "202": {
          "description": "202 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.usersUrl}/users",
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
           }
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^202.*": {
           "statusCode": "202"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       },
       "options": {
        "responses": {
         "200": {
          "description": "200 response",
          "headers": {
           "Access-Control-Allow-Origin": {
            "schema": {
             "type": "string"
            }
           },
           "Access-Control-Allow-Methods": {
            "schema": {
             "type": "string"
            }
           },
           "Access-Control-Allow-Headers": {
            "schema": {
             "type": "string"
            }
           }
          },
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'",
            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
            "method.response.header.Access-Control-Allow-Origin": "'*'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock"
        }
       }
      },
      "/points/deposit": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "202": {
          "description": "202 response",
          "content": {}
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/points/deposit",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^202.*": {
           "statusCode": "202"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/users/external/{externalid}": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "profile",
          "in": "query",
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "externalid",
          "in": "path",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.usersUrl}/users/external/{externalid}",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.path.externalid": "method.request.path.externalid",
          "integration.request.querystring.profile": "method.request.querystring.profile",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transactions/details": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/getTransactionRequest"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/transactions/details",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/users/search": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "profile",
          "in": "query",
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "email",
          "in": "query",
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "phone",
          "in": "query",
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.usersUrl}/users/search",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.querystring.email": "method.request.querystring.email",
          "integration.request.querystring.phone": "method.request.querystring.phone",
          "integration.request.querystring.profile": "method.request.querystring.profile",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transaction/details": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/getTransactionRequest"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/transactions/details",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transaction/purchase-history": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "externalId",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/transactions/purchase-history",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.externalId": "method.request.header.externalId",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/transaction": {
       "post": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         }
        ],
        "requestBody": {
         "content": {
          "application/json": {
           "schema": {
            "$ref": "#/components/schemas/Empty"
           }
          }
         },
         "required": true
        },
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "202": {
          "description": "202 response",
          "content": {}
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "uri": "http://${stageVariables.pointsUrl}/transactions",
         "responses": {
          "default": {
           "statusCode": "200"
          },
          "^4\\d{2}.*": {
           "statusCode": "400"
          },
          "^202.*": {
           "statusCode": "202"
          },
          "^404.*": {
           "statusCode": "404"
          },
          "^5\\d{2}.*": {
           "statusCode": "500"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      },
      "/points/available_certificates": {
       "get": {
        "parameters": [
         {
          "name": "country",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "locale",
          "in": "header",
          "required": true,
          "schema": {
           "type": "string"
          }
         },
         {
          "name": "points",
          "in": "query",
          "schema": {
           "type": "string"
          }
         }
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         },
         "400": {
          "description": "400 response",
          "content": {}
         },
         "404": {
          "description": "404 response",
          "content": {}
         },
         "500": {
          "description": "500 response",
          "content": {}
         }
        },
        "security": [
         {
          "api_key": []
         }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.pointsUrl}/points/available_certificates",
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "requestParameters": {
          "integration.request.header.country": "method.request.header.country",
          "integration.request.querystring.points": "method.request.querystring.points",
          "integration.request.header.locale": "method.request.header.locale"
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\" : 200}"
         },
         "passthroughBehavior": "when_no_templates",
         "timeoutInMillis": 29000,
         "type": "http"
        }
       }
      },
      "/users/application-status": {
       "get": {
        "responses": {
         "200": {
          "description": "200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/Empty"
            }
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "httpMethod": "GET",
         "uri": "http://${stageVariables.usersUrl}/application-status",
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "passthroughBehavior": "when_no_match",
         "type": "http"
        }
       }
      }
     },
     "components": {
      "schemas": {
       "getTransactionRequest": {
        "required": [
         "transaction_key"
        ],
        "type": "object",
        "properties": {
         "transaction_key": {
          "type": "string"
         }
        }
       },
       "Empty": {
        "title": "Empty Schema",
        "type": "object"
       },
       "fetchTierSystemRequest": {
        "required": [
         "take"
        ],
        "type": "object",
        "properties": {
         "skip": {
          "type": "integer",
          "format": "int32"
         },
         "take": {
          "type": "integer",
          "format": "int32"
         },
         "status": {
          "type": "integer",
          "format": "int32"
         }
        }
       },
       "fetchOfferRequest": {
        "required": [
         "culture",
         "offer_id"
        ],
        "type": "object",
        "properties": {
         "offer_id": {
          "type": "string"
         },
         "culture": {
          "type": "string"
         }
        }
       },
       "fetchUserRewardModel": {
        "required": [
         "culture",
         "skip",
         "take",
         "user_id"
        ],
        "type": "object",
        "properties": {
         "user_id": {
          "type": "string"
         },
         "skip": {
          "type": "integer",
          "format": "int32"
         },
         "take": {
          "type": "integer",
          "format": "int32"
         },
         "culture": {
          "type": "string"
         }
        }
       }
      },
      "securitySchemes": {
       "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
       }
      }
     },
     "x-amazon-apigateway-policy": {
      "Version": "2012-10-17",
      "Statement": [
       {
        "Effect": "Allow",
        "Principal": "*",
        "Action": "execute-api:Invoke",
        "Resource": "arn:aws:execute-api:us-east-2:149216511563:dgwd7k1lf5/*"
       }
      ]
     },
     "x-amazon-apigateway-request-validators": {
      "Validate query string parameters and headers": {
       "validateRequestParameters": true,
       "validateRequestBody": false
      },
      "Validate body, query string parameters, and headers": {
       "validateRequestParameters": true,
       "validateRequestBody": true
      }
     }
    },
    "Name": "GlobalLoyaltyApi-dev"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayCicdDemoStacks/GlobalLoyaltyApi-dev/Resource"
   }
  },
  "GlobalLoyaltyApidevDeploymentA9797FFA0e62188f158ad1096e94346e553c10d0": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "GlobalLoyaltyApidev52BC2517"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayCicdDemoStacks/GlobalLoyaltyApi-dev/Deployment/Resource"
   }
  },
  "GlobalLoyaltyApidevDeploymentStagedev5FD5FD54": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "GlobalLoyaltyApidevDeploymentA9797FFA0e62188f158ad1096e94346e553c10d0"
    },
    "RestApiId": {
     "Ref": "GlobalLoyaltyApidev52BC2517"
    },
    "StageName": "dev",
    "Variables": {
     "pointsUrl": "loyalty-backend-dev.internal",
     "usersUrl": "users-service-dev.internal"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayCicdDemoStacks/GlobalLoyaltyApi-dev/DeploymentStage.dev/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/4WOQW/CMAyFfws5ojQrvSBx28Z5SO2xQpNpDTK0aRS7VCjqf0fNMrHbTn5+eu+zC1PkG5OvYOKsaW9ZRycTKoHmpmHib3B0AcEJHiZUDpsSWd4d1UGBoz2eyZLQYNVOrZVWLbpueBzcYrHaBcUCF/yCHlPgDp7g1CHHfZ6P+vNsE1OXyMPoG/wAxlqt1VHvI69HK3VQLXLjyf05B46S8ihA9hVP/Ih/ubpa3omoXyv1//kzcmJ5XtRhFDfKrO3Qorny270ozGZr8tWViTI/WqEeTfkzn4YkMKBhAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayCicdDemoStacks/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "GlobalLoyaltyApidevEndpointF534E287": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "GlobalLoyaltyApidev52BC2517"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "GlobalLoyaltyApidevDeploymentStagedev5FD5FD54"
      },
      "/"
     ]
    ]
   }
  },
  "ApiEndpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "GlobalLoyaltyApidev52BC2517"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "GlobalLoyaltyApidevDeploymentStagedev5FD5FD54"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}